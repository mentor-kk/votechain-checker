{"version":3,"sources":["contractData.js","App.js","serviceWorker.js","index.js"],"names":["pollContractAbi","constant","inputs","name","type","outputs","payable","stateMutability","anonymous","indexed","testNetPollContractAddress","Web3","require","web3","thorify","App","state","pollIdHex","pollId","creator","voteHex","pollHash","pollQuestions","getPollData","eth","Contract","getPastEvents","filter","_this","then","results","_results$0$returnValu","returnValues","setState","hexToString","trim","getPollQuestions","atou","getVoteResult","voteAnswers","abi","decodeParameter","updateStateField","e","field","Object","defineProperty","target","value","_this2","this","react_default","a","createElement","style","padding","display","flexDirection","smooth_ui_core_sc_es","valid","size","placeholder","margin","border","onChange","onClick","disabled","borderBottom","minHeight","str","utils","fromAscii","hex","toAscii","window","btoa","unescape","encodeURIComponent","decodeURIComponent","escape","atob","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de9b0b75.chunk.js","sourcesContent":["export const pollContractAbi = [{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pollId\",\"type\":\"bytes32\"},{\"name\":\"pollHash\",\"type\":\"string\"}],\"name\":\"registerPoll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setPollRegisterAllowed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setExternalVotesAllowed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"bytes32\"},{\"name\":\"pollId\",\"type\":\"bytes32\"},{\"name\":\"result\",\"type\":\"uint8[]\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPollRegisterAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isExternalVotesAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_externalVotesAllowed\",\"type\":\"bool\"},{\"name\":\"_pollRegisterAllowed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"voterToken\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"pollId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"result\",\"type\":\"uint8[]\"}],\"name\":\"Vote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"pollId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"pollHash\",\"type\":\"string\"}],\"name\":\"Poll\",\"type\":\"event\"}];\r\nexport const testNetPollContractAddress = '0x03779Fe782e2aca6111b55Fe7D4cd68076293441';","import React, { Component } from 'react';\nimport { Input, Button, Textarea } from '@smooth-ui/core-sc'\nimport { thorify } from \"thorify\";\nimport { pollContractAbi, testNetPollContractAddress } from './contractData';\nconst Web3 = require(\"web3\");\nconst web3 = thorify(new Web3(), \"https://testnet.vote-chain.com\");\n\nclass App extends Component {\n\n  state = {\n    pollIdHex: '',\n    pollId: '',\n    creator: '',\n    voteHex: '',\n    pollHash: '',\n    pollQuestions: ''\n  }\n\n  render() {\n    return (\n      <div style={{ padding: 40, display: 'flex', flexDirection: 'column' }}>\n          <Input valid size=\"md\" placeholder=\"POLL ID (hex)\" style={{ margin: 8, border: '1px solid #bd4932' }} onChange={(e) => this.updateStateField(e, 'pollIdHex')} value={this.state.pollIdHex}/>\n          <Button size=\"md\" style={{ margin: 8 }} onClick={this.getPollData}>Get poll data</Button>\n          <span>Poll hash</span><Input disabled size=\"md\" placeholder=\"POLL HASH\" style={{ margin: 8 }} value={this.state.pollHash}/>\n          <span>Poll creator address</span><Input disabled size=\"md\" placeholder=\"POLL CREATOR\" style={{ margin: 8 }} value={this.state.creator}/>\n          <span>Poll id</span><Input disabled size=\"md\" placeholder=\"POLL ID\" style={{ margin: 8 }} value={this.state.pollId}/>\n          <div style={{ borderBottom: '1px solid #D3D3D3', margin: 8 }}></div>\n          <Input size=\"md\" disabled placeholder=\"POLL HASH\" style={{ margin: 8 }} value={this.state.pollHash}/>\n          <Button size=\"md\" style={{ margin: 8 }} onClick={this.getPollQuestions}>Get poll questions</Button>\n          <span>Poll questions</span><Textarea size=\"lg\" disabled placeholder=\"POLL QUESTIONS\" style={{ margin: 8, minHeight: 120 }} value={this.state.pollQuestions}/>\n          <div style={{ borderBottom: '1px solid #D3D3D3', margin: 8 }}></div>\n          <Input valid size=\"md\" placeholder=\"VOTE RESULT (hex)\" style={{ margin: 8, border: '1px solid #bd4932' }} onChange={(e) => this.updateStateField(e, 'voteHex')} value={this.state.voteHex}/>\n          <Button size=\"md\" style={{ margin: 8 }} onClick={this.getVoteResult}>Get vote results</Button>\n          <span>Vote answers</span><Input disabled size=\"md\" placeholder=\"VOTE ANSWERS\" style={{ margin: 8 }} value={this.state.voteAnswers}/>\n          <div style={{ borderBottom: '1px solid #D3D3D3', margin: 8 }}></div>\n      </div>\n    );\n  }\n\n  getPollData = () => {\n    const pollContractWeb3 = new web3.eth.Contract(pollContractAbi, testNetPollContractAddress);\n    pollContractWeb3.getPastEvents('Poll', { filter: { pollId: this.state.pollIdHex } })\n      .then(results => {\n        const { pollHash, pollId, creator} = results[0].returnValues;\n        this.setState({\n          pollHash,\n          pollId: this.hexToString(pollId).trim(),\n          creator: creator\n        })\n      });\n  }\n\n  getPollQuestions = () => {\n    this.setState({\n      pollQuestions: this.atou(this.state.pollHash)\n    });\n  }\n\n  getVoteResult = () => {\n    this.setState({\n      voteAnswers: web3.eth.abi.decodeParameter('uint8[]', this.state.voteHex)\n    })\n  }\n\n  updateStateField = (e, field) => {\n    this.setState({\n      [field]: e.target.value,\n    });\n  }\n\n  stringToHex(str) {\n    return web3.utils.fromAscii(str);\n  }\n\n  hexToString(hex) {\n    try {\n      const result = web3.utils.toAscii(hex);\n      return result;\n    } catch(e) {}\n  }\n\n  utoa(str) {\n    try {\n      const result = window.btoa(unescape(encodeURIComponent(str)));\n      return result;\n    } catch(e) {}\n  }\n\n  atou(str) {\n    try {\n      const result = decodeURIComponent(escape(window.atob(str)));\n      return result;\n    } catch(e) {}\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}